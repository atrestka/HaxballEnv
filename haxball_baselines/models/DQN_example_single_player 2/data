{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLmRxbi5wb2xpY2llc5SMCURRTlBvbGljeZSTlC4=",
        "__module__": "stable_baselines3.dqn.policies",
        "__annotations__": "{'q_net': <class 'stable_baselines3.dqn.policies.QNetwork'>, 'q_net_target': <class 'stable_baselines3.dqn.policies.QNetwork'>}",
        "__doc__": "\n    Policy class with Q-Value Net and target net for DQN\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function DQNPolicy.__init__ at 0x13ece19d0>",
        "_build": "<function DQNPolicy._build at 0x13ece1a60>",
        "make_q_net": "<function DQNPolicy.make_q_net at 0x13ece1af0>",
        "forward": "<function DQNPolicy.forward at 0x13ece1b80>",
        "_predict": "<function DQNPolicy._predict at 0x13ece1c10>",
        "_get_constructor_parameters": "<function DQNPolicy._get_constructor_parameters at 0x13ece1ca0>",
        "set_training_mode": "<function DQNPolicy.set_training_mode at 0x13ece1d30>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x13ece9280>"
    },
    "verbose": 2,
    "policy_kwargs": {
        "net_arch": [
            256,
            256,
            256
        ]
    },
    "num_timesteps": 10000000,
    "_total_timesteps": 10000000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1702399010625448000,
    "learning_rate": 0.003,
    "tensorboard_log": null,
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVlQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYgAAAAAAAAAIFatz7Edxs/6FMpPwAAAAC/MkQ/CdoZPwAAAAAAAAAAlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwiGlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVlQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYgAAAAAAAAACAjqT7Edxs/Cv0gPwAAAAC/MkQ/CdoZPwAAAAAAAAAAlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwiGlIwBQ5R0lFKULg=="
    },
    "_episode_num": 353171,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 2487500,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVIgIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lIwFZHR5cGWUk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMDWJvdW5kZWRfYmVsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWCAAAAAAAAAABAQEBAQEBAZRoCIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksIhZSMAUOUdJRSlIwNYm91bmRlZF9hYm92ZZRoESiWCAAAAAAAAAABAQEBAQEBAZRoFUsIhZRoGXSUUpSMBl9zaGFwZZRLCIWUjANsb3eUaBEoliAAAAAAAAAAAAAAAAAAAAAAAMjCAADIwgAAAAAAAAAAAADIwgAAyMKUaAtLCIWUaBl0lFKUjARoaWdolGgRKJYgAAAAAAAAAAAAUkQAAMhDAADIQgAAyEIAAFJEAADIQwAAyEIAAMhClGgLSwiFlGgZdJRSlIwIbG93X3JlcHKUjDFbICAgMC4gICAgMC4gLTEwMC4gLTEwMC4gICAgMC4gICAgMC4gLTEwMC4gLTEwMC5dlIwJaGlnaF9yZXBylIwpWzg0MC4gNDAwLiAxMDAuIDEwMC4gODQwLiA0MDAuIDEwMC4gMTAwLl2UjApfbnBfcmFuZG9tlE51Yi4=",
        "dtype": "float32",
        "bounded_below": "[ True  True  True  True  True  True  True  True]",
        "bounded_above": "[ True  True  True  True  True  True  True  True]",
        "_shape": [
            8
        ],
        "low": "[   0.    0. -100. -100.    0.    0. -100. -100.]",
        "high": "[840. 400. 100. 100. 840. 400. 100. 100.]",
        "low_repr": "[   0.    0. -100. -100.    0.    0. -100. -100.]",
        "high_repr": "[840. 400. 100. 100. 840. 400. 100. 100.]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.discrete.Discrete'>",
        ":serialized:": "gAWVogEAAAAAAACMGWd5bW5hc2l1bS5zcGFjZXMuZGlzY3JldGWUjAhEaXNjcmV0ZZSTlCmBlH2UKIwBbpSMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMBnNjYWxhcpSTlIwFbnVtcHmUjAVkdHlwZZSTlIwCaTiUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYkMIEgAAAAAAAACUhpRSlIwFc3RhcnSUaAhoDkMIAAAAAAAAAACUhpRSlIwGX3NoYXBllCmMBWR0eXBllGgOjApfbnBfcmFuZG9tlIwUbnVtcHkucmFuZG9tLl9waWNrbGWUjBBfX2dlbmVyYXRvcl9jdG9ylJOUjAVQQ0c2NJRoG4wUX19iaXRfZ2VuZXJhdG9yX2N0b3KUk5SGlFKUfZQojA1iaXRfZ2VuZXJhdG9ylIwFUENHNjSUjAVzdGF0ZZR9lChoJooQadTEwCKUGXx0PjQ/rlc/TYwDaW5jlIoRMYqVzq0NItZGro2376z/lgB1jApoYXNfdWludDMylEsBjAh1aW50ZWdlcpRKJKZDHXVidWIu",
        "n": "18",
        "start": "0",
        "_shape": [],
        "dtype": "int64",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 1000000,
    "batch_size": 32,
    "learning_starts": 50000,
    "tau": 1.0,
    "gamma": 0.8,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x13e9acc10>",
        "add": "<function ReplayBuffer.add at 0x13e9acca0>",
        "sample": "<function ReplayBuffer.sample at 0x13e9acd30>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x13e9acdc0>",
        "_maybe_cast_dtype": "<staticmethod object at 0x13e948ee0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x13e956080>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLBGgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "exploration_initial_eps": 1.0,
    "exploration_final_eps": 0.05,
    "exploration_fraction": 0.1,
    "target_update_interval": 10000,
    "_n_calls": 10000000,
    "max_grad_norm": 10,
    "exploration_rate": 0.05,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVDQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLAUsTQwSIAFMAlE6FlCmMAV+UhZSMbS9Vc2Vycy9zdGVmYW5jbGFya2V3b3JrL29wdC9hbmFjb25kYTMvZW52cy9HYW1lL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUjARmdW5jlEuDQwIAAZSMA3ZhbJSFlCl0lFKUfZQojAtfX3BhY2thZ2VfX5SMGHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbpSMCF9fbmFtZV9flIwec3RhYmxlX2Jhc2VsaW5lczMuY29tbW9uLnV0aWxzlIwIX19maWxlX1+UjG0vVXNlcnMvc3RlZmFuY2xhcmtld29yay9vcHQvYW5hY29uZGEzL2VudnMvR2FtZS9saWIvcHl0aG9uMy45L3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUjBxjbG91ZHBpY2tsZS5jbG91ZHBpY2tsZV9mYXN0lIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaB99lH2UKGgWaA2MDF9fcXVhbG5hbWVfX5SMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgXjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOURz9ok3S8an76hZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu"
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": [],
    "exploration_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVsQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLBEsTQyxkAXwAGACIAWsEchCIAFMAiAJkAXwAGACIAIgCGAAUAIgBGwAXAFMAZABTAJROSwGGlCmMEnByb2dyZXNzX3JlbWFpbmluZ5SFlIxtL1VzZXJzL3N0ZWZhbmNsYXJrZXdvcmsvb3B0L2FuYWNvbmRhMy9lbnZzL0dhbWUvbGliL3B5dGhvbjMuOS9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZSMBGZ1bmOUS3FDBgABDAEEApSMA2VuZJSMDGVuZF9mcmFjdGlvbpSMBXN0YXJ0lIeUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMbS9Vc2Vycy9zdGVmYW5jbGFya2V3b3JrL29wdC9hbmFjb25kYTMvZW52cy9HYW1lL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpRoHSlSlGgdKVKUh5R0lFKUjBxjbG91ZHBpY2tsZS5jbG91ZHBpY2tsZV9mYXN0lIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaCN9lH2UKGgYaA2MDF9fcXVhbG5hbWVfX5SMG2dldF9saW5lYXJfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lChoCowIYnVpbHRpbnOUjAVmbG9hdJSTlIwGcmV0dXJulGgvdYwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBmMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP6mZmZmZmZqFlFKUaDdHP7mZmZmZmZqFlFKUaDdHP/AAAAAAAACFlFKUh5SMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    }
}